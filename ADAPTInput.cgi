#!/usr/bin/perl

use strict;
use warnings;
use CGI;
#use CGI::Pretty;
use CGI::Carp qw(fatalsToBrowser);
use ADAPTConfig;

my $browser = USED_BROWSER;
my $q = new CGI;

print
    $q->header(),
    $q->start_html(-title => 'ADAPT Program input',
		   -style => CSS_FILE,
		   -script => {-language => 'JAVASCRIPT',
			       -src => JS_FILE_MU}),
    $q->start_center(),
    $q->a({-href => 'ADAPTHome.cgi'},
    $q->img({-src => '../../'.ADAPT_DIR.'adapt.png',
	     -border => '0',
	     -alt => 'ADAPT '.VERSION.' logo - home'})),
    $q->a({-href => 'ADAPTInput.cgi',},
    $q->img({-src => '../../'.ADAPT_DIR.'program2.png',
	     -border => '0',
	     -alt => 'ADAPT '.VERSION.' program',
#	     -onMouseOver => 'this.src="'.'../../'.ADAPT_DIR.'program2.png'.'";',
#	     -onMouseOut => 'this.src="'.'../../'.ADAPT_DIR.'program1.png'.'";'
	    })),
    $q->a({-href => 'ADAPTDatabase.cgi',},
    $q->img({-src => '../../'.ADAPT_DIR.'database1.png',
	     -border => '0',
	     -alt => 'ADAPT '.VERSION.' database',
	     -onMouseOver => 'this.src="'.'../../'.ADAPT_DIR.'database2.png'.'";',
	     -onMouseOut => 'this.src="'.'../../'.ADAPT_DIR.'database1.png'.'";'})),
    $q->a({-href => 'ADAPTHelp.cgi',},
    $q->img({-src => '../../'.ADAPT_DIR.'help1.png',
	     -border => '0',
	     -alt => 'ADAPT '.VERSION.' help',
	     -onMouseOver => 'this.src="'.'../../'.ADAPT_DIR.'help2.png'.'";',
	     -onMouseOut => 'this.src="'.'../../'.ADAPT_DIR.'help1.png'.'";'})),
    $q->a({-href => 'ADAPTContact.cgi',},
    $q->img({-src => '../../'.ADAPT_DIR.'contact1.png',
	     -border => '0',
	     -alt => 'ADAPT '.VERSION.' contact',
	     -onMouseOver => 'this.src="'.'../../'.ADAPT_DIR.'contact2.png'.'";',
	     -onMouseOut => 'this.src="'.'../../'.ADAPT_DIR.'contact1.png'.'";'})),
    $q->br()x2,
    $q->start_form({-method => 'post',
		    -name => 'input',
		    -onSubmit => 'return false',
		    -action => 'ADAPTOutput.cgi'}),
    $q->hidden(-name => 'resolution',
	       -id => 'resolution',
	       -default => '0'),
    $q->start_table({-border =>'0',
		     -width => TABLE_WIDTH,
		     -cellspacing => '0'}),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Input data')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'inputhelpbutton',
			    -onClick => 'if(document.getElementById(\'inputhelp\').style.display==\'block\'){document.getElementById(\'inputhelp\').style.display=\'none\';document.getElementById(\'inputhelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'inputhelp\').style.display=\'block\';document.getElementById(\'inputhelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'inputhelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
#				   $q->br(),
				   'ADAPT is able to use different file formats for data input. You can either use <b>raw ABI data</b> provided in <code>.fsa</code> or <code>.ab1</code> files, or you can use text files containing the <b>extraced ARISA profile data</b> (usually <code>.txt</code> or <code>.tsv</code> files).',
				   $q->br()x2,
				   '<u>Here are some tips for the different file formats:</u>',
				   $q->br(),
				   'If you prefer, you can extract the ARISA profile from the ABI trace file before using ADAPT. To extract the profile, you have to use a program such as the ABI Genescan software that converts the trace file into a table. Export this table into a text file, if possible. Otherwise, copy the data from the table into MS Excel and follow the instructions below.',
				   $q->br(),$q->br(),
				   $q->b('File format:'),$q->br(),
				   'The input data in text format with TSV (Tab Separated Values) must contain the table header names in the first line of the file (header line). There are three required columns that must be named: "Sample File Name", "Size" and "Height" (case insensitive). The rest of the file should contain the values of the ARISA data.',
				   $q->br(),$q->br(),
				   'Your file could look like this:'.$q->br(),
				   $q->img({-src => '../../'.ADAPT_DIR.'tsv_file.gif',-border => '1',-alt => 'TSV file example image'}),
				   $q->br(),$q->br(),
				   $q->b('How to generate .tsv files from MS Excel spreatsheets:'),$q->br(),
				   '1) Open your file in MS Excel'.$q->br().'2) Goto \'File\' => \'Save as\''.$q->br().'3) Enter a name for the file with the extension \'tsv\' (e.g. data.tsv)'.$q->br().'4) Choose as format \'Text (Tab delimited)(*.txt)\' and press \'Save\''.$q->br().$q->br().$q->b('Note: ').$q->br().'You can also save the file with the extension \'txt\', if you wish. This file extension will not change the file format and ADAPT can read both .txt and .tsv files.'.$q->br().$q->br().'To analyze more than one data file, you can select multiple files - one file at a time. The selection of single files might be more work, but it necessary due to security restrictions of your browser.',
#				   $q->br(),
				   $q->br()),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Select your ').' <code>.txt</code>, <code>.tsv</code>, <code>.fsa</code>, or <code>.ab1</code> file with ARISA data'),
			   $q->br(),
			   $q->hidden(-name => 'files',
				      -default => '0'),
			   $q->filefield({-name => 'upload',
					  -id => 'upload',
					  -default => '',
					  -size => '80'}),
			   $q->div({-id => 'filelist',
				    -class => 'table_info'},
				   $q->br(),
				   $q->b('files uploaded (max 100):')),
			   '<script>var multi_selector = new MultiSelector(document.getElementById(\'filelist\'),100);multi_selector.addElement(document.getElementById(\'upload\'));</script>',
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'PCR primers')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'primerhelpbutton',
			    -onClick => 'if(document.getElementById(\'primerhelp\').style.display==\'block\'){document.getElementById(\'primerhelp\').style.display=\'none\';document.getElementById(\'primerhelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'primerhelp\').style.display=\'block\';document.getElementById(\'primerhelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'primerhelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'You need to specify the primers so that we can compare the fragment lengths in the input file to those in the database. This is neccessary because each combination of primers will give a different length.',
				   $q->br()x2,
				   'You can either choose from one of the predefined primer sets in the drop-down menu below, or specify your own primers in the text fields below.',
#				   $q->br()x2,
#				   $q->b('Note: ').'If you want to allow mismatches in certain positions, just use \'N\' at this possition.',
				   $q->br()),
			   $q->font({-class => 'table_info'},
				    '&nbsp;Select '.$q->b('forward primer').': &nbsp;&nbsp;'),
			   $q->popup_menu(-name => 'forward',
					  -values => [' ',map {$_.' [5\'-'.PRIMERS->{forward}->{$_}.'-3\']'} sort keys %{PRIMERS->{forward}}],
					  -default => [' ']
			   ),
			   $q->br()x2,
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;or ').' paste the primer sequence here: &nbsp;5\'-'),
			   $q->input({-size => '30',
				      -maxlength => '50',
				      -name => 'forwardt',
				      -id => 'forwardt',
				      -value => ''}),
			   $q->font({-class => 'table_info'},
				    '-3\''),
			   $q->br()x3,
			   $q->font({-class => 'table_info'},
			   '&nbsp;Select '.$q->b('reverse primer').': &nbsp;&nbsp;'),
			   $q->popup_menu(-name => 'reverse',
					  -values => [' ',map {$_.' [5\'-'.PRIMERS->{reverse}->{$_}.'-3\']'} sort keys %{PRIMERS->{reverse}}],
					  -default => [' ']
			   ),
			   $q->br()x2,
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;or ').' paste the primer sequence here: &nbsp;5\'-'),
			   $q->input({-size => '30',
				      -maxlength => '50',
				      -name => 'reverset',
				      -id => 'reverset',
				      -value => ''}),
			   $q->font({-class => 'table_info'},
				    '-3\''),
			   $q->br()x2,
			   $q->font({-class => 'footer'},
				    '<b>Note:</b> To allow mismatches, use \'N\' for the preferred mismatch positions. Please use the contact form for any questions.'),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Size standard (only used for <code>.fsa</code>&nbsp; or <code>.ab1</code> files)')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'standardhelpbutton',
			    -onClick => 'if(document.getElementById(\'standardhelp\').style.display==\'block\'){document.getElementById(\'standardhelp\').style.display=\'none\';document.getElementById(\'standardhelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'standardhelp\').style.display=\'block\';document.getElementById(\'standardhelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'standardhelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'The specification of the size standard is necessary for input data in ABI format (<code>.fsa</code>&nbsp; or <code>.ab1</code> files). The size standard runs with your samples on the fragment analyzer machine and is used to calculate the length/size of the detected fragments. Without the size standard, we are not able to extract the fragment lengths from the input file.',
				   $q->br()x2,
				   'You can either choose from one of the predefined size standards in the drop-down menu below, or specify your own size standard sizes in the text box below. Please make sure that you use the correct size standard, because otherwise the fragment length will be incorrectly calculated.',
				   $q->br()x2,
				   $q->b('Note: ').'The size standard is <u>not</u> used for input files that already extracted the sizes from the raw ABI data. Such files are usually in <code>.txt</code>&nbsp; or <code>.tsv</code> format.',
				   $q->br()),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Select ').'name of used size standard: &nbsp;&nbsp;'),
			   $q->popup_menu(-name => 'sizesl',
					  -values => [' ',sort keys %{(SIZE_STD)}],
					  -default => [' ']
			   ),
			   $q->br(),$q->br(),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;or copy').' fragment sizes of standard into text field below (separated by comma): '),
			   $q->br(),
			   $q->textarea(-name => 'sizest',
					-default => $q->param('sizest') || '',
					-rows => 3,
					-columns => 80),
			   $q->br(),$q->br(),
			   $q->font({-class => 'footer'},
				    '<b>Note:</b> Peaks that are detected outside of the size standard range can not be predicted with high accurracy. Make sure you used an appropriate size standard and provide/select the correct one here. Please use the contact form for any question.'),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Fragment length range')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'thresholdhelpbutton',
			    -onClick => 'if(document.getElementById(\'thresholdhelp\').style.display==\'block\'){document.getElementById(\'thresholdhelp\').style.display=\'none\';document.getElementById(\'thresholdhelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'thresholdhelp\').style.display=\'block\';document.getElementById(\'thresholdhelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'thresholdhelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'This value is used to remove fragments that are too small or too large from the data set used for the analysis. Fragmets that are outside the length range could be artefacts. This can be true for short fragments, e.g. fragments should be at least as long as the sum of the length of the fragment inside the 16S and the 23S rRNA gene (see figure below). Therefore, only the length greater than the minimum length value should be used for further calculations.',
				   $q->br(),
				   'Fragments that are very large should be removed if they are outside the range of the used size standard and the predicted size of the sample fragments would be inaccurately predicted. Another reason can be that an ITS length that is very large is not expected to be present in the sample and should be excluded from the analysis. The examples given here are just a suggestion to think about when setting the fragment length threshold values. There are many more reasons why you might want to limit the length of the fragments in the analysis that are not mentioned here and should be considered.',
				   $q->br()x2,
				   $q->img({-src => '../../'.ADAPT_DIR.'length_threshold.gif',-border => '1',-alt => 'Length threshold figure',-width => '60%'}),
				   $q->br()x2),
			   $q->font({-class => 'table_info'},
				    '&nbsp;Use only '.$q->b('fragments').' with a '.$q->b('length').' ranging between &nbsp;'),
			   $q->input({-size => '4',
				      -maxlength => '4',
				      -name => 'minlength',
				      -id => 'minlength',
				      -value => $q->param('minlength') || MINLENGTH,
				      -onFocus => 'if(this.value==\''.MINLENGTH.'\''.(defined $q->param('minlength') ? ' || this.value==\''.$q->param('minlength').'\'' : '').'){this.value=\'\';}',
				      -onBlur => 'if(this.value==\'\'){this.value=\''.($q->param('minlength') || MINLENGTH).'\';}'}),
			   $q->font({-class => 'table_info'},
				    '&nbsp; and &nbsp;'),
			   $q->input({-size => '4',
				      -maxlength => '4',
				      -name => 'maxlength',
				      -id => 'maxlength',
				      -value => $q->param('maxlength') || MAXLENGTH,
				      -onFocus => 'if(this.value==\''.MAXLENGTH.'\''.(defined $q->param('maxlength') ? ' || this.value==\''.$q->param('maxlength').'\'' : '').'){this.value=\'\';}',
				      -onBlur => 'if(this.value==\'\'){this.value=\''.($q->param('maxlength') || MAXLENGTH).'\';}'}),
			   $q->font({-class => 'table_info'},
				    '&nbsp;nucleotides'),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Fluorescence intensity (peak-height) threshold')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'heighthelpbutton',
			    -onClick => 'if(document.getElementById(\'heighthelp\').style.display==\'block\'){document.getElementById(\'heighthelp\').style.display=\'none\';document.getElementById(\'heighthelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'heighthelp\').style.display=\'block\';document.getElementById(\'heighthelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'heighthelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'This threshold is used to exclude background fluorescence with an intensity below a certain value (above the baseline). We consider "good" peaks the ones that are greater than or equal to the mean value of all peak heights in the fragment length range (see above) and/or the <i>min threshold value</i>. There are different way to calculate the mean value. You can chose from interquartile mean, geometric mean, arithmetic mean, quadratic mean, and cubic mean (given in order of mean values from low to high).'.$q->br().$q->br(),
				   $q->b('Notes:').$q->br().'- The threshold value will be calculated individually for each sample.',
				   $q->br(),
				   '- If you use "threshold calculation" AND "min threshold value", the higher value of both will be used as the threshold value.',
				   $q->br()x2,
				   $q->b('Example:').$q->br(),
				   'Fluorescence units (peak heights) in input: 10, 20, 50, 100, 300, 500, 1000, 2000'.$q->br(),
				   'Interquartile mean: 237.50'.$q->br(),
				   'Geometric mean: 152.99'.$q->br(),
				   'Arithmentic mean: 497.50'.$q->br(),
				   'Quadratic mean: 818.00'.$q->br(),
				   'Cubic mean: 1045.91',
				   $q->br()x2),
			   $q->start_table({-border =>'0',
					    -width => '',
					    -cellpadding => '3',
					    -cellspacing => '0'}),
			   $q->Tr($q->th({-class => 'tbg0'},
					 $q->checkbox(-name => 'cutoffmin',
						      -checked => 1,
						      -value => 1,
						      -label => '')),
				  $q->th({-class => 'tbg0',
					  -valign => 'middle',
					  -align => 'left'},
					 $q->font({-class => 'table_info'},
						  $q->b('Min threshold value:'))),
				  $q->th({-class => 'tbg0'},'&nbsp;' x 10),
			       $q->th({-class => 'tbg0'},
					 $q->checkbox(-name => 'cutoffcalc',
						      -checked => 0,
						      -value => 1,
						      -label => '')) ,
				  $q->th({-class => 'tbg0',
					  -valign => 'middle',
					  -align => 'left'},
					 $q->font({-class => 'table_info'},
						  $q->b('Threshold calculation:')))),
			   $q->Tr($q->td({-class => 'tbg0'},'&nbsp;'),
				  $q->td({-class => 'tbg0',
					  -align => 'left',
					  -valign =>'top'},
					 $q->input({-size => '5',
						    -maxlength => '10',
						    -name => 'cutoff',
						    -id => 'cutoff',
						    -value => $q->param('cutoff') || CUTOFF,
						    -onFocus => 'if(this.value==\''.CUTOFF.'\''.(defined $q->param('cutoff') ? ' || this.value==\''.$q->param('cutoff').'\'' : '').'){this.value=\'\';}',
						    -onBlur => 'if(this.value==\'\'){this.value=\''.($q->param('cutoff') || CUTOFF).'\';}'}),
					 $q->font({-class => 'table_info'},
						  '&nbsp;fluorescence units greater than baseline')),
				  $q->td({-class => 'tbg0'},'&nbsp;'),
				  $q->td({-class => 'tbg0'},'&nbsp;'),
				  $q->td({-class => 'tbg0',
					  -align => 'left'},
					 $q->radio_group(-name => 'methods',
							 -values => ['imean','gmean','amean','p2mean','p3mean'],
							 -default => 'amean',
							 -linebreak => 'true',
							 -labels => {'imean'  => PARAMS->{'imean'},
								     'gmean'  => PARAMS->{'gmean'},
								     'amean'  => PARAMS->{'amean'},
								     'p2mean' => PARAMS->{'p2mean'},
								     'p3mean' => PARAMS->{'p3mean'}})),
				  ),
			   $q->end_table(),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Fragment length binning')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'binninghelpbutton',
			    -onClick => 'if(document.getElementById(\'binninghelp\').style.display==\'block\'){document.getElementById(\'binninghelp\').style.display=\'none\';document.getElementById(\'binninghelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'binninghelp\').style.display=\'block\';document.getElementById(\'binninghelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'binninghelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'The fragment length values can not be predicted with 100% accuracy. Therefore, regions around the predicted length will also be considered. Prior studies show best results for a bin value of 5 (equivalent to +/-2) for fragments shorter than 600 bases and a bin value of 7 (equivalent to +/-3) for fragments longer than or equal to 600 bases.',
				   $q->br()x2,
				   $q->b('Notes:').$q->br().'- The standard values for the bin value are based on our own tests and experiments. Different experiments could require different bin values. If you are not sure whether these values are best for your data, try changing the values slightly and comparing the results.',
				   $q->br(),
				   '- If you don\'t want to use a bin value, you can use 0 for each value.',
				   $q->br(),
				   '- Input fragment lengths with decimal values are rounded off to the nearest number, with .5 being rounded up.',
				   $q->br()x2),
			   $q->start_table({-border =>'0',
					    -width => '',
					    -cellpadding => '3',
					    -cellspacing => '0'}),
			   $q->Tr($q->th({-class => 'tbg0',
					  -valign => 'middle',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  $q->b('Fragment length'))),
				  $q->th({-class => 'tbg0',
					  -valign => 'middle',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  $q->b('&nbsp;&nbsp;+ / -&nbsp;&nbsp;'))),
				  $q->th({-class => 'tbg0',
					  -valign => 'middle',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  $q->b('Max percent deviation'))),
				  $q->th({-class => 'tbg0',
					  -valign => 'middle',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  $q->b('&nbsp;&nbsp;Bin size&nbsp;&nbsp;')))),
			   $q->Tr($q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  '< 600')),
				  $q->td({-class => 'tbg0'},
					 $q->input({-size => '2',
						    -maxlength => '2',
						    -name => 'lower500',
						    -id => 'lower500',
						    -align => 'middle',
						    -value => $q->param('lower500') || LOWER500,
						    -onFocus => 'if(this.value==\''.LOWER500.'\'){this.value=\'\';}',
						    -onBlur => 'if(this.value==\'\'){this.value=\''.LOWER500.'\';} getElementById("lower500p").innerHTML = "> "+(100/599*this.value).toFixed(2)+" %";getElementById("lower500b").innerHTML = (this.value*2+1);'})),
				  $q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info',-id => 'lower500p'},
						  '> '.(int(100/599*LOWER500*100+0.5)/100).' %')),
				  $q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info',-id => 'lower500b'},
						  (LOWER500*2+1)))),
			   $q->Tr($q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  '< 900')),
				  $q->td({-class => 'tbg0'},
					 $q->input({-size => '2',
						    -maxlength => '2',
						    -name => 'lower1000',
						    -id => 'lower1000',
						    -value => $q->param('lower1000') || LOWER1000,
						    -onFocus => 'if(this.value==\''.LOWER1000.'\'){this.value=\'\';}',
						    -onBlur => 'if(this.value==\'\'){this.value=\''.LOWER1000.'\';} getElementById("lower1000p").innerHTML = (100/899*this.value).toFixed(2)+"-"+(100/600*this.value).toFixed(2)+" %";getElementById("lower1000b").innerHTML = (this.value*2+1);'})),
				  $q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info',-id => 'lower1000p'},
						  (int(100/899*LOWER1000*100+0.5)/100).'-'.(int(100/600*LOWER1000*100+0.5)/100).' %')),
				  $q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info',-id => 'lower1000b'},
						  (LOWER1000*2+1)))),
			   $q->Tr($q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info'},
						  '&#8805; 900')),
				  $q->td({-class => 'tbg0'},
					 $q->input({-size => '2',
						    -maxlength => '2',
						    -name => 'upper1000',
						    -id => 'upper1000',
						    -value => $q->param('upper1000') || UPPER1000,
						    -onFocus => 'if(this.value==\''.UPPER1000.'\'){this.value=\'\';}',
						    -onBlur => 'if(this.value==\'\'){this.value=\''.UPPER1000.'\';} getElementById("upper1000p").innerHTML = "&#8804; "+(100/900*this.value).toFixed(2)+" %";getElementById("upper1000b").innerHTML = (this.value*2+1);'})),
				  $q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info',-id => 'upper1000p'},
						  '&#8804; '.(int(100/900*UPPER1000*100+0.5)/100).' %')),
				  $q->td({-class => 'tbg0',
					  -align => 'center'},
					 $q->font({-class => 'table_info',-id => 'upper1000b'},
						  (UPPER1000*2+1)))),
			   $q->end_table(),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Database filter')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'dbhelpbutton',
			    -onClick => 'if(document.getElementById(\'dbhelp\').style.display==\'block\'){document.getElementById(\'dbhelp\').style.display=\'none\';document.getElementById(\'dbhelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'dbhelp\').style.display=\'block\';document.getElementById(\'dbhelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'dbhelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'This filter option allows you to restrict your search to specific kindoms and data sources. The underlying database contains information about the host organisms the 16S-ITS-23S region was retrieved from. This information is extracted from different databases and you can choose which databases you want to use as data source for your analysis.',
				   $q->br()x2,
				   'Currently, there are only 16S-ITS-23S regions from Bacteria and Archaea in the database. By default, only regions in Bacteria are used for the analysis. If you want to use Archaea additionally or just Archaea, you can do so by changing the default selection.',
				   $q->br()x2,
				   'The data used here is currently extracted from different data resources: ',$q->a({href => 'http://www.ncbi.nlm.nih.gov/', target => '_blank'},'NCBI databases'),' and ',$q->a({href=>'http://www.theseed.org/', target=>'_blank'},'The SEED database').'.',
#,', and the ',$q->a({href=>'http://egg.umh.es/rissc/',target=>'_blank'},'Ribosomal Internal Spacer Sequence Collection (RISSC)'),
' You can use data from both of these resources, or select the one you prefer below.',
				   $q->br(),$q->br()),
			   $q->font({-class => 'table_info'},
				    '&nbsp;Please select the data you want to use for the analysis.'),
			   $q->br()x2,
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Use the following domain(s): ')),
			   $q->checkbox_group(-name => 'domain',
					      -id => 'domain',
					      -values => ['Bacteria','Archaea'],
					      -default => ['Bacteria'],
#					      -disabled => ['Archaea'],
#				     -linebreak => 'true',
			   ),
			   $q->br()x2,
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Use data derived from: ')),
			   $q->checkbox_group(-name => 'datasource',
					      -id => 'datasource',
					      -values => ['NCBI','SEED'],
					      -default => ['NCBI','SEED'],
#				     -linebreak => 'true',
			   ),
# 			   $q->br()x2,
# 			   $q->font({-class => 'table_info'},
# 				    $q->b('&nbsp;Use organisms that match: ')),
# 			   $q->radio_group(-name => 'match',
# 					   -values => ['any','all'],
# 					   -default => 'any',
# #					   -linebreak => 'true',
# 					   -labels => {'all' => 'all fragments in that organism that match PCR primer given',
# 						       'any' => 'any fragment or '}),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
		   -align => 'left',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'tableQuestion'},
			   'Outputs')),
	   $q->td({-colspan => '1',
		   -align => 'right',
		   -background => '#000000',
		   -class => 'background0'},
		  $q->font({-class => 'helpbutton',
			    -id => 'outputhelpbutton',
			    -onClick => 'if(document.getElementById(\'outputhelp\').style.display==\'block\'){document.getElementById(\'outputhelp\').style.display=\'none\';document.getElementById(\'outputhelpbutton\').innerHTML=\'show&nbsp;help&nbsp;&or;\';} else {document.getElementById(\'outputhelp\').style.display=\'block\';document.getElementById(\'outputhelpbutton\').innerHTML=\'hide&nbsp;help&nbsp;&and;\';}'},
			   'show&nbsp;help&nbsp;&or;'))),
    $q->Tr($q->td({-colspan => '2',
		   -align => 'left',
		   -class => 'tableOptions'},
		  $q->font({-class => 'table_info2'},
			   $q->div({-id => 'outputhelp',
				    -class => 'divhelp',
				    -style => 'display:none;'},
				   'ADAPT offers different analyses for your input data. The output page allows you easy access to the results of the ARISA data analysis. The output page presents the results in form of tables and charts, each of which can be exported into different text and image formats for subsequent analysis of the data. You can select the analyzes and outputs you are interested in from the list below. The output sometimes takes a while to calculate and to transfer the data to your browser. If you do not need all of the outputs, we suggest you select only those outputs you are interested in.',
				   $q->br()x2,
				   $q->b('<u>General outputs:</u>'),
				   $q->br(),
#				   $q->b('- Database hits').' - provides an overview of the input ITS lengths and the database hits in tables and a chart.',
#				   $q->br(),
#				   $q->b('- Hit table').' - shows for each ITS region information about matching ITS regions in the database, as well as, its host organism. The entries in the Hit table are linked to additional information, such as the sequence of the ITS region or the organism\'s taxonomy in the NCBI Taxonomy browser.',
#				   $q->br(),
				   $q->b('- Input parameters').' - shows an overview of the selected input parameters and the input data.',
				   $q->br(),
				   $q->b('- Overview of fragments matching primer set').' - provides an tabular overview of the number of matching fragments and organisms for different categories and a graphical overview of the fragment length the selected primer set shows for the data in the database.',
				   $q->br(),
				   $q->b('- Potentially matching fragment lengths').' - shows an overview of all fragment length extracted from the input data and their matching length in the database.',
				   $q->br(),
				   $q->b('- Potentially matching organisms').' - shows an overview of the organisms that have similar fragment lengths to the input ARISA profile.',
				   $q->br(),
				   $q->b('- Matching fragments by phylum').' - provides a table with an overview of the number of matching fragments for each phyla.',
				   $q->br()x2,
				   $q->b('<u>Plot outputs:</u>'),
				   $q->br(),
				   $q->b('- Trace file plots').' - displays plots of the raw input trace data.',
				   $q->br(),
				   $q->b('- Raw data plots').' - displays plots of the raw ABI data for the sample and the standard. This can be used to see the quality of the input data and if the input was parsed correctly.',
				   $q->br(),
				   $q->b('- Size standard curve fitting plots').' - displays plots of the results of the curve fitting to the size standard. This is a good place to check if the algorithm could detect all peaks of the size standard correctly and how good the estimation of the size of sample peaks outside the size standard range are. This is only applicable for inputs that contain ABI raw data with size standard data.',
				   $q->br()x2,
				   $q->b('<u>Metadata related analysis:</u>'),
				   $q->br(),
				   $q->b('- Pathogenicity average fraction').' - provides tables and a chart with the average fraction having pathogenic or non-pathogenic characteristics.',
				   $q->br(),
				   $q->b('- Trophic average fraction').' - provides tables and a chart with the average fraction having autotrophic or heterotrophic characteristics.',
				   $q->br()x2,
				   $q->b('<u>Multiple samples grouping:</u>'),
				   $q->br(),
				   'For inputs with ARISA profiles of more than one sample, ADAPT also performs multiple samples analysis, by grouping the values by input ITS length, or by matching database ITS length. Samples with same length matches or same input ITS length can be inspected easily this way.',
				   $q->br(),
				   $q->b('- Samples grouped by database length').' - shows the results grouped by the length if ITS regions in the database.',
				   $q->br(),
				   $q->b('- Samples grouped by input length').' - shows the results grouped by the length of the ITS regions in the input data.',
				   $q->br(),$q->br()),
			   $q->font({-class => 'table_info'},
				    '&nbsp;Please select the output(s) you are interested in.'),
			   $q->br(),$q->br(),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;General:')),
			   $q->br(),
			   $q->checkbox_group(-name=>'outputsg',
					      -values=>[sort keys %{(OUTPUTS)->{'general'}}],
					      -default=>['lengthtable','orgntable'],
					      -linebreak=>'true',
					      -labels=> (OUTPUTS)->{'general'}),
			   $q->br(),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Plots:')),
			   $q->br(),
			   $q->checkbox_group(-name=>'outputsp',
					      -values=>[sort keys %{(OUTPUTS)->{'plots'}}],
					      -default=>['tracefileplots'],
					      -linebreak=>'true',
					      -labels=> (OUTPUTS)->{'plots'}),
			   $q->br(),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Metadata related analysis:')),
			   $q->br(),
			   $q->checkbox_group(-name=>'outputsd',
					      -values=>[sort keys %{(OUTPUTS)->{'metadata'}}],
					      -default=>[],
					      -linebreak=>'true',
					      -labels=> (OUTPUTS)->{'metadata'}),
			   $q->br(),
			   $q->font({-class => 'table_info'},
				    $q->b('&nbsp;Multiple samples grouping:').' (only applicable if more than one sample as input)'),
			   $q->br(),
			   $q->checkbox_group(-name=>'outputsm',
					      -values=>[sort keys %{(OUTPUTS)->{'multiple'}}],
					      -default=>[],
					      -linebreak=>'true',
					      -labels=> (OUTPUTS)->{'multiple'}),
			   $q->br(),
			   $q->checkbox(-name => 'allnone',
					-id => 'allnone',
					-checked => 0,
					-value => 0,
					-label => ' All / None',
					-onClick => 'var b = [document.forms.input.outputsg,document.forms.input.outputsd,document.forms.input.outputsp,document.forms.input.outputsm];for(j=0;j<b.length;j++){var l=b[j];for(i=0;i<l.length;i++){if(document.getElementById("allnone").checked==true){l.item(i).checked=true;}else{l.item(i).checked=false;}}}'),
			   $q->br()))),
    $q->Tr($q->td({-colspan => '2',
		   -class => 'background0'},
		  '&nbsp;')),
    $q->Tr($q->td({-colspan => '1',
 		   -align => 'center',
 		   -width => '50%',
 		   -class => 'tableButton'
		  },
 		  $q->button({-value => 'RESET',
 			      -name => 'resetB',
 			      -class => 'buttonreset',
 			      -onClick => 'location=\'ADAPTInput.cgi\''})),
 	   $q->td({-colspan => '1',
 		   -align => 'center',
 		   -width => '50%',
 		   -class => 'tableButton'},
 		  $q->button({-value => 'SUBMIT',
			      -id => 'submitb',
			      -name => 'submitb',
 			      -class => 'buttonsubmit',
 			      -onClick => 'if(document.forms.input.files.value<2){alert(\'Input data file is required.\');return false;}else{if(document.forms.input.forward.value == \' \' && document.forms.input.forwardt.value == \'\'){alert(\'Please choose or input the forward primer you used in your ARISA analysis.\');return false;}else{if(document.forms.input.reverse.value == \' \' && document.forms.input.reverset.value == \'\'){alert(\'Please choose or input the reverse primer you used in your ARISA analysis.\');return false;}else{if((isNaN(document.forms.input.minlength.value) == true) || (isNaN(document.forms.input.maxlength.value) == true) || (isNaN(document.forms.input.lower500.value) == true) || (isNaN(document.forms.input.lower1000.value) == true) || (isNaN(document.forms.input.upper1000.value) == true) || (isNaN(document.forms.input.cutoff.value) == true)){alert(\'Please use only numbers as values.\');return false;}else{if((document.forms.input.minlength.value < 0) || (document.forms.input.maxlength.value < 0) || (document.forms.input.lower500.value < 0) || (document.forms.input.lower1000.value < 0) || (document.forms.input.upper1000.value < 0) || (document.forms.input.cutoff.value < 0)){alert(\'The values are to low. Please choose greater values.\nOnly values greater than or equal 0 are allowed.\');return false;}else{if((document.forms.input.cutoffcalc.checked == false) && (document.forms.input.cutoffmin.checked == false)){alert(\'Please choose at least one cutoff method.\');return false;}else{if((document.forms.input.domain.item(0).checked == false) && (document.forms.input.domain.item(1).checked == false)){alert(\'Please choose at least one domain.\');return false;}else{if((document.forms.input.datasource.item(0).checked == false) && (document.forms.input.datasource.item(1).checked == false) && (document.forms.input.datasource.item(2).checked == false)){alert(\'Please choose at least one data source.\');return false;}else{var chk = 0;var b = [document.forms.input.outputsg,document.forms.input.outputsp,document.forms.input.outputsd,document.forms.input.outputsm];for(j=0;j<b.length;j++){var l=b[j];for(i=0;i<l.length;i++){if(l.item(i).checked == true){chk=1;}}}if(chk == 0){alert(\'Please choose at least one of the outputs.\');return false;}else{document.forms.input.resolution.value=document.width;document.forms.input.submit();}}}}}}}}}',
 			      }))),
    $q->end_table(),
    $q->end_form(),
    FOOTER,
    $q->end_center(),
    GOOGLE_ANALYTICS,
    $q->end_html();
